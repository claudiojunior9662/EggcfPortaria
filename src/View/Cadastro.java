/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Connection.ConnectionFactory;
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamException;
import com.github.sarxos.webcam.WebcamResolution;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.bean.CadastroBEAN;
import model.bean.ControleExpedienteBEAN;
import model.dao.cadastroDAO;
import model.dao.controleDAO;
import java.util.Date;
import model.bean.ControleForaExpedienteBEAN;
import model.dao.controlefDAO;

/**
 *
 * @author claud
 */
public class Cadastro extends javax.swing.JFrame {
        BufferedImage imageArrayVisitantes = null;
        BufferedImage imageArraySaida = null;
        BufferedImage imageArrayEntrada = null;
        private Dimension dimensao_default;
        private Webcam WEBCAM;
        boolean executando = true;
        boolean executando2 = true;
        DefaultListModel model_list;
        DefaultListModel model_list2;
        DefaultListModel model_list3;
        int redefinirVisitantesAux = 0;
        int redefinirSaidaAux = 0;
        int redefinirEntradaAux = 0;
        boolean webcam_found = false;
        
    public Cadastro() throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setExtendedState(this.MAXIMIZED_BOTH);
        try{
                Connection con = ConnectionFactory.getConnection();
                ConnectionFactory.closeConnection(con);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,"Erro ao obter conexão com o banco de dados! " + e);
            }
        
        try{
            INICIALIZA();
            webcam_found = true;
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Nao foi detectado nenhum dispositivo de video!\n O programa nao ira ser capaz de capturar imagens!\n Favor conecte um dispositivo de video e abra o programa novamente! "+ e);
            iniciarVideoRegistroVisitantes.setEnabled(false);
            iniciarVideoSaida.setEnabled(false);
            webcam_found = false;
        }
        
        readJTable();
        readJTable_controle();
        readJTable_controlef();
        
        //Modela a lista de pesquisa do Registro de Visitantes
        listaPesquisaVisitantes.setVisible(false);
        model_list = new DefaultListModel();
        listaPesquisaVisitantes.setModel(model_list);
        
        //Modela a lista de pesquisa do Controle de Saída de CB/SD
        listaPesquisaSaida.setVisible(false);
        model_list2 = new DefaultListModel();
        listaPesquisaSaida.setModel(model_list2);
        
        //Modela a lista de pesquisa do ControleExpedienteBEAN de entrada fora do expediente
        listaPesquisaEntrada.setVisible(false);
        model_list3 = new DefaultListModel();
        listaPesquisaEntrada.setModel(model_list3);
        
        estadoInicialVisitantes();
        estadoInicialSaida();
        estadoInicialEntrada();
        
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        salvarVisitante = new javax.swing.JButton();
        redefinirVisitante = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaVisitantes = new javax.swing.JTable();
        definirHorarioSaidaVisitantes = new javax.swing.JButton();
        novoVisitante = new javax.swing.JButton();
        ferramentas_adm_visitante = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        txt_info = new javax.swing.JTextPane();
        sair_button = new javax.swing.JButton();
        associarVeiculo = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        listaPesquisaVisitantes = new javax.swing.JList<String>();
        nomeCompletoVisitante = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        pesquisaRegistroVisitantes = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        numeroDocumentoVisitante = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tipoDocumentoVisitante = new javax.swing.JComboBox<String>();
        civil = new javax.swing.JRadioButton();
        militar = new javax.swing.JRadioButton();
        txtVisitante = new javax.swing.JLabel();
        fornecedor = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        telefoneVisitante = new javax.swing.JFormattedTextField();
        destinoVisitante = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        comQuemFalarVisitante = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        c4 = new javax.swing.JCheckBox();
        c2 = new javax.swing.JCheckBox();
        c3 = new javax.swing.JCheckBox();
        c5 = new javax.swing.JCheckBox();
        c10 = new javax.swing.JCheckBox();
        c1 = new javax.swing.JCheckBox();
        c6 = new javax.swing.JCheckBox();
        c7 = new javax.swing.JCheckBox();
        c9 = new javax.swing.JCheckBox();
        c8 = new javax.swing.JCheckBox();
        c11 = new javax.swing.JCheckBox();
        c15 = new javax.swing.JCheckBox();
        c19 = new javax.swing.JCheckBox();
        c20 = new javax.swing.JCheckBox();
        c12 = new javax.swing.JCheckBox();
        c14 = new javax.swing.JCheckBox();
        c16 = new javax.swing.JCheckBox();
        c17 = new javax.swing.JCheckBox();
        c18 = new javax.swing.JCheckBox();
        c13 = new javax.swing.JCheckBox();
        fotoVisitante = new javax.swing.JLabel();
        iniciarVideoRegistroVisitantes = new javax.swing.JButton();
        capturarVideoRegistroVisitantes = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        definirHorarioEntradaSaida = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        txt_info2 = new javax.swing.JTextPane();
        ferramentas_adm_controle_saida = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        listaPesquisaSaida = new javax.swing.JList<String>();
        postoGraduacaoSaida = new javax.swing.JComboBox<String>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        nomeGuerraSaida = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        sessaoSaida = new javax.swing.JComboBox<String>();
        jLabel14 = new javax.swing.JLabel();
        motivoSaida = new javax.swing.JTextField();
        pesquisaSaida = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        fotoSaida = new javax.swing.JLabel();
        capturarVideoSaida = new javax.swing.JButton();
        iniciarVideoSaida = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaSaida = new javax.swing.JTable();
        sair_controle = new javax.swing.JButton();
        redefinirSaida = new javax.swing.JButton();
        salvarSaida = new javax.swing.JButton();
        novoSaida = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        definirHorarioEntradaEntrada = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        txt_info3 = new javax.swing.JTextPane();
        ferramentas_adm_controle_entrada = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        listaPesquisaEntrada = new javax.swing.JList<String>();
        postoGraduacaoEntrada = new javax.swing.JComboBox<String>();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        nomeGuerraEntrada = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        sessaoEntrada = new javax.swing.JComboBox<String>();
        jLabel21 = new javax.swing.JLabel();
        motivoEntrada = new javax.swing.JTextField();
        pesquisaEntrada = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        fotoEntrada = new javax.swing.JLabel();
        iniciarVideoEntrada = new javax.swing.JButton();
        capturarVideoEntrada = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaEntrada = new javax.swing.JTable();
        sair_controle1 = new javax.swing.JButton();
        novoEntrada = new javax.swing.JButton();
        redefinirEntrada = new javax.swing.JButton();
        salvarEntrada = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EGGCF Portaria");
        setExtendedState(6);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jTabbedPane1.setAutoscrolls(true);
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1098, 100));

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        salvarVisitante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cadastrar.png"))); // NOI18N
        salvarVisitante.setToolTipText("Cadastrar");
        salvarVisitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarVisitanteActionPerformed(evt);
            }
        });

        redefinirVisitante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/redefinir.png"))); // NOI18N
        redefinirVisitante.setToolTipText("Redefinir");
        redefinirVisitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redefinirVisitanteActionPerformed(evt);
            }
        });

        tabelaVisitantes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabelaVisitantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Crachá", "Nome ", "Tipo Doc", "Nº", "Destino", "Com Quem Falar", "Tel", "Tipo Visitante", "Data", "Hora Entrada", "Hora Saída"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaVisitantes.setToolTipText("");
        tabelaVisitantes.setPreferredSize(new java.awt.Dimension(0, 0));
        tabelaVisitantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaVisitantesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabelaVisitantes);

        definirHorarioSaidaVisitantes.setText("Definir horário de saída");
        definirHorarioSaidaVisitantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                definirHorarioSaidaVisitantesActionPerformed(evt);
            }
        });

        novoVisitante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/adicionar.png"))); // NOI18N
        novoVisitante.setToolTipText("Novo Cadastro");
        novoVisitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoVisitanteActionPerformed(evt);
            }
        });

        ferramentas_adm_visitante.setText("Ferramentas de Administrador");
        ferramentas_adm_visitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ferramentas_adm_visitanteActionPerformed(evt);
            }
        });

        jScrollPane5.setViewportView(txt_info);

        sair_button.setText("Sair");
        sair_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sair_buttonActionPerformed(evt);
            }
        });

        associarVeiculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/associarVeiculo.png"))); // NOI18N
        associarVeiculo.setToolTipText("Associar Veículo");
        associarVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                associarVeiculoActionPerformed(evt);
            }
        });

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel12.setBorder(null);
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        listaPesquisaVisitantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaPesquisaVisitantesMouseClicked(evt);
            }
        });
        jPanel12.add(listaPesquisaVisitantes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 400, 120));

        nomeCompletoVisitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeCompletoVisitanteActionPerformed(evt);
            }
        });
        jPanel12.add(nomeCompletoVisitante, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 400, -1));

        jLabel1.setText("Nome Completo:");
        jPanel12.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        pesquisaRegistroVisitantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaRegistroVisitantesActionPerformed(evt);
            }
        });
        pesquisaRegistroVisitantes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pesquisaRegistroVisitantesKeyReleased(evt);
            }
        });
        jPanel12.add(pesquisaRegistroVisitantes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 400, -1));

        jLabel8.setText("Pesquisa por nome:");
        jPanel12.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 20));

        jLabel3.setText("Tipo Documento:");
        jPanel12.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 140, -1));
        jPanel12.add(numeroDocumentoVisitante, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 170, -1));

        jLabel2.setText("Número Documento:");
        jPanel12.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, -1, -1));

        tipoDocumentoVisitante.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "ID Militar", "RG", "CNH(Num Reg)", "Passaporte", "Carteira de Trabalho", "Certificado de Reservista" }));
        tipoDocumentoVisitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoDocumentoVisitanteActionPerformed(evt);
            }
        });
        jPanel12.add(tipoDocumentoVisitante, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 220, -1));

        buttonGroup1.add(civil);
        civil.setText("Civil");
        jPanel12.add(civil, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, -1, -1));

        buttonGroup1.add(militar);
        militar.setText("Militar");
        jPanel12.add(militar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, -1, -1));

        txtVisitante.setText("Tipo Visitante:");
        jPanel12.add(txtVisitante, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, 40));

        buttonGroup1.add(fornecedor);
        fornecedor.setText("Fornecedor");
        jPanel12.add(fornecedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, -1, -1));

        jLabel5.setText("Telefone:");
        jPanel12.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        jLabel7.setText("Destino:");
        jPanel12.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, -1));

        try {
            telefoneVisitante.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        telefoneVisitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telefoneVisitanteActionPerformed(evt);
            }
        });
        jPanel12.add(telefoneVisitante, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 139, -1));

        destinoVisitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destinoVisitanteActionPerformed(evt);
            }
        });
        jPanel12.add(destinoVisitante, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 139, -1));

        jLabel4.setText("Com quem deseja falar:");
        jPanel12.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, -1));

        comQuemFalarVisitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comQuemFalarVisitanteActionPerformed(evt);
            }
        });
        jPanel12.add(comQuemFalarVisitante, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 139, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Crachá"));

        buttonGroup2.add(c4);
        c4.setText("4");
        c4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c4ActionPerformed(evt);
            }
        });

        buttonGroup2.add(c2);
        c2.setText("2");
        c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2ActionPerformed(evt);
            }
        });

        buttonGroup2.add(c3);
        c3.setText("3");
        c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c3ActionPerformed(evt);
            }
        });

        buttonGroup2.add(c5);
        c5.setText("5");
        c5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c5ActionPerformed(evt);
            }
        });

        buttonGroup2.add(c10);
        c10.setText("10");
        c10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c10ActionPerformed(evt);
            }
        });

        buttonGroup2.add(c1);
        c1.setText("1");
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(c6);
        c6.setText("6");
        c6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c6ActionPerformed(evt);
            }
        });

        buttonGroup2.add(c7);
        c7.setText("7");
        c7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c7ActionPerformed(evt);
            }
        });

        buttonGroup2.add(c9);
        c9.setText("9");
        c9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c9ActionPerformed(evt);
            }
        });

        buttonGroup2.add(c8);
        c8.setText("8");
        c8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c8ActionPerformed(evt);
            }
        });

        buttonGroup2.add(c11);
        c11.setText("11");

        buttonGroup2.add(c15);
        c15.setText("15");

        buttonGroup2.add(c19);
        c19.setText("19");

        buttonGroup2.add(c20);
        c20.setText("20");

        buttonGroup2.add(c12);
        c12.setText("12");

        buttonGroup2.add(c14);
        c14.setText("14");

        buttonGroup2.add(c16);
        c16.setText("16");
        c16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c16ActionPerformed(evt);
            }
        });

        buttonGroup2.add(c17);
        c17.setText("17");

        buttonGroup2.add(c18);
        c18.setText("18");

        buttonGroup2.add(c13);
        c13.setText("13");
        c13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(c1)
                        .addGap(7, 7, 7)
                        .addComponent(c2)
                        .addGap(7, 7, 7)
                        .addComponent(c3)
                        .addGap(7, 7, 7)
                        .addComponent(c4)
                        .addGap(7, 7, 7)
                        .addComponent(c5))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(c6)
                        .addGap(7, 7, 7)
                        .addComponent(c7)
                        .addGap(7, 7, 7)
                        .addComponent(c8)
                        .addGap(7, 7, 7)
                        .addComponent(c9)
                        .addGap(17, 17, 17)
                        .addComponent(c10))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(c11)
                        .addGap(0, 0, 0)
                        .addComponent(c12)
                        .addGap(0, 0, 0)
                        .addComponent(c13)
                        .addGap(0, 0, 0)
                        .addComponent(c14)
                        .addGap(10, 10, 10)
                        .addComponent(c15))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(c16)
                        .addGap(0, 0, 0)
                        .addComponent(c17)
                        .addGap(0, 0, 0)
                        .addComponent(c18)
                        .addGap(0, 0, 0)
                        .addComponent(c19)
                        .addGap(10, 10, 10)
                        .addComponent(c20)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c1)
                    .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c3)
                    .addComponent(c4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c5))
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c7)
                    .addComponent(c8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c9)
                    .addComponent(c10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c11)
                    .addComponent(c12)
                    .addComponent(c13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c14)
                    .addComponent(c15))
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c16)
                    .addComponent(c17)
                    .addComponent(c18)
                    .addComponent(c19)
                    .addComponent(c20))
                .addContainerGap())
        );

        jPanel12.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, -1, -1));

        fotoVisitante.setBackground(new java.awt.Color(0, 0, 0));
        fotoVisitante.setOpaque(true);
        jPanel12.add(fotoVisitante, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 410, 220, 220));

        iniciarVideoRegistroVisitantes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/iniciarGravacao.png"))); // NOI18N
        iniciarVideoRegistroVisitantes.setToolTipText("Iniciar Vídeo");
        iniciarVideoRegistroVisitantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarVideoRegistroVisitantesActionPerformed(evt);
            }
        });
        jPanel12.add(iniciarVideoRegistroVisitantes, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 410, -1, 38));

        capturarVideoRegistroVisitantes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/capturarFoto.png"))); // NOI18N
        capturarVideoRegistroVisitantes.setToolTipText("Capturar Foto");
        capturarVideoRegistroVisitantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capturarVideoRegistroVisitantesActionPerformed(evt);
            }
        });
        jPanel12.add(capturarVideoRegistroVisitantes, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 460, -1, 38));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(novoVisitante)
                    .addComponent(redefinirVisitante)
                    .addComponent(salvarVisitante)
                    .addComponent(associarVeiculo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(498, 498, 498)
                .addComponent(definirHorarioSaidaVisitantes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(1326, 1326, 1326)
                .addComponent(ferramentas_adm_visitante)
                .addGap(5, 5, 5)
                .addComponent(sair_button)
                .addGap(0, 6, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane5)
                .addGap(6, 6, 6))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(novoVisitante)
                                .addGap(6, 6, 6)
                                .addComponent(redefinirVisitante)
                                .addGap(6, 6, 6)
                                .addComponent(salvarVisitante)
                                .addGap(6, 6, 6)
                                .addComponent(associarVeiculo)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(6, 6, 6)
                .addComponent(definirHorarioSaidaVisitantes, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(ferramentas_adm_visitante))
                    .addComponent(sair_button))
                .addGap(5, 5, 5)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );

        jTabbedPane1.addTab("Registro de Visitantes", jPanel1);

        jPanel2.setPreferredSize(new java.awt.Dimension(1000, 720));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        definirHorarioEntradaSaida.setText("Definir Horário de Entrada");
        definirHorarioEntradaSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                definirHorarioEntradaSaidaActionPerformed(evt);
            }
        });

        jScrollPane6.setViewportView(txt_info2);

        ferramentas_adm_controle_saida.setText("Ferramentas de Administrador");
        ferramentas_adm_controle_saida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ferramentas_adm_controle_saidaActionPerformed(evt);
            }
        });

        jPanel4.setBorder(null);
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        listaPesquisaSaida.setBorder(null);
        listaPesquisaSaida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaPesquisaSaidaMouseClicked(evt);
            }
        });
        jPanel4.add(listaPesquisaSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 400, 100));

        postoGraduacaoSaida.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "SD", "CB" }));
        jPanel4.add(postoGraduacaoSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 120, -1));

        jLabel11.setText("Posto/Graduação:");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 150, -1));

        jLabel12.setText("Nome de Guerra:");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 100, -1));
        jPanel4.add(nomeGuerraSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 270, -1));

        jLabel13.setText("Seção:");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        sessaoSaida.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "Administrativa", "Produção", "Expedição", "Pessoal", "Direção", "Orçamentação", "Pré-impressão" }));
        jPanel4.add(sessaoSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 400, -1));

        jLabel14.setText("Motivo de Saída:");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));
        jPanel4.add(motivoSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 400, -1));

        pesquisaSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaSaidaActionPerformed(evt);
            }
        });
        pesquisaSaida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pesquisaSaidaKeyReleased(evt);
            }
        });
        jPanel4.add(pesquisaSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 400, -1));

        jLabel15.setText("Procurar por nome de guerra:");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        fotoSaida.setBackground(new java.awt.Color(0, 0, 0));
        fotoSaida.setOpaque(true);
        jPanel4.add(fotoSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, 220, 220));

        capturarVideoSaida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/capturarFoto.png"))); // NOI18N
        capturarVideoSaida.setToolTipText("Capturar Foto");
        capturarVideoSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capturarVideoSaidaActionPerformed(evt);
            }
        });
        jPanel4.add(capturarVideoSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 320, -1, 38));

        iniciarVideoSaida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/iniciarGravacao.png"))); // NOI18N
        iniciarVideoSaida.setToolTipText("Iniciar Vídeo");
        iniciarVideoSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarVideoSaidaActionPerformed(evt);
            }
        });
        jPanel4.add(iniciarVideoSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 270, -1, 38));

        tabelaSaida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Posto/Grad", "Nome de Guerra", "Sessão", "Data", "Horário Saída", "Horário Entrada", "Motivo Saída"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaSaida.setPreferredSize(new java.awt.Dimension(1070, 0));
        tabelaSaida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaSaidaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaSaida);

        sair_controle.setText("Sair");
        sair_controle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sair_controleActionPerformed(evt);
            }
        });

        redefinirSaida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/redefinir.png"))); // NOI18N
        redefinirSaida.setToolTipText("Redefinir");
        redefinirSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redefinirSaidaActionPerformed(evt);
            }
        });

        salvarSaida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cadastrar.png"))); // NOI18N
        salvarSaida.setToolTipText("Cadastrar");
        salvarSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarSaidaActionPerformed(evt);
            }
        });

        novoSaida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/adicionar.png"))); // NOI18N
        novoSaida.setToolTipText("Novo Cadastro");
        novoSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoSaidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(novoSaida)
                    .addComponent(redefinirSaida)
                    .addComponent(salvarSaida))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(definirHorarioEntradaSaida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(jLabel9)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(ferramentas_adm_controle_saida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sair_controle))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1568, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(novoSaida)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(redefinirSaida)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(salvarSaida))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)))
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(definirHorarioEntradaSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ferramentas_adm_controle_saida)
                    .addComponent(sair_controle))
                .addGap(5, 5, 5)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Controle de saída de CB/SD", jPanel2);

        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel7MouseClicked(evt);
            }
        });

        definirHorarioEntradaEntrada.setText("Definir Horário de Saída");
        definirHorarioEntradaEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                definirHorarioEntradaEntradaActionPerformed(evt);
            }
        });

        jScrollPane7.setViewportView(txt_info3);

        ferramentas_adm_controle_entrada.setText("Ferramentas de Administrador");
        ferramentas_adm_controle_entrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ferramentas_adm_controle_entradaActionPerformed(evt);
            }
        });

        jPanel9.setBorder(null);
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        listaPesquisaEntrada.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        listaPesquisaEntrada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaPesquisaEntradaMouseClicked(evt);
            }
        });
        jPanel9.add(listaPesquisaEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 400, 90));

        postoGraduacaoEntrada.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "SD", "CB", "SGT", "ST", "TEN", "CAP", "MAJ", "TC" }));
        jPanel9.add(postoGraduacaoEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 120, -1));

        jLabel18.setText("Posto/Graduação:");
        jPanel9.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel19.setText("Nome de Guerra:");
        jPanel9.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 100, -1));
        jPanel9.add(nomeGuerraEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 270, -1));

        jLabel20.setText("Seção:");
        jPanel9.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        sessaoEntrada.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "Administrativa", "Produção", "Expedição", "Pessoal", "Direção", "Orçamentação", "Pré-impressão" }));
        jPanel9.add(sessaoEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 400, -1));

        jLabel21.setText("Motivo de Entrada:");
        jPanel9.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));
        jPanel9.add(motivoEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 400, -1));

        pesquisaEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaEntradaActionPerformed(evt);
            }
        });
        pesquisaEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pesquisaEntradaKeyReleased(evt);
            }
        });
        jPanel9.add(pesquisaEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 400, -1));

        jLabel16.setText("Procurar por nome de guerra:");
        jPanel9.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        fotoEntrada.setBackground(new java.awt.Color(0, 0, 0));
        fotoEntrada.setOpaque(true);
        jPanel9.add(fotoEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 220, 220));

        iniciarVideoEntrada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/iniciarGravacao.png"))); // NOI18N
        iniciarVideoEntrada.setToolTipText("Iniciar Vídeo");
        iniciarVideoEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarVideoEntradaActionPerformed(evt);
            }
        });
        jPanel9.add(iniciarVideoEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 260, -1, 38));

        capturarVideoEntrada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/capturarFoto.png"))); // NOI18N
        capturarVideoEntrada.setToolTipText("Capturar Foto");
        capturarVideoEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capturarVideoEntradaActionPerformed(evt);
            }
        });
        jPanel9.add(capturarVideoEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 310, -1, 38));

        tabelaEntrada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Posto/Grad", "Nome de Guerra", "Sessão", "Data", "Horário Entrada", "Horário Saída", "Motivo Saída"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaEntrada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaEntradaMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tabelaEntrada);

        sair_controle1.setText("Sair");
        sair_controle1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sair_controle1ActionPerformed(evt);
            }
        });

        novoEntrada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/adicionar.png"))); // NOI18N
        novoEntrada.setToolTipText("Novo Cadastro");
        novoEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoEntradaActionPerformed(evt);
            }
        });

        redefinirEntrada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/redefinir.png"))); // NOI18N
        redefinirEntrada.setToolTipText("Redefinir");
        redefinirEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redefinirEntradaActionPerformed(evt);
            }
        });

        salvarEntrada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cadastrar.png"))); // NOI18N
        salvarEntrada.setToolTipText("Cadastrar");
        salvarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarEntradaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane7)
                .addContainerGap())
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ferramentas_adm_controle_entrada)
                        .addGap(6, 6, 6)
                        .addComponent(sair_controle1)
                        .addContainerGap())
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(novoEntrada)
                            .addComponent(redefinirEntrada)
                            .addComponent(salvarEntrada))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(definirHorarioEntradaEntrada, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1101, Short.MAX_VALUE)))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(definirHorarioEntradaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ferramentas_adm_controle_entrada)
                            .addComponent(sair_controle1))
                        .addGap(6, 6, 6))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(novoEntrada)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(redefinirEntrada)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(salvarEntrada))
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 26, Short.MAX_VALUE)))
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Controle de Entrada Fora do Expediente de Militares", jPanel7);

        getContentPane().add(jTabbedPane1);

        setBounds(0, 0, 1622, 857);
    }// </editor-fold>//GEN-END:initComponents

    private void definirHorarioEntradaSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_definirHorarioEntradaSaidaActionPerformed
        try{
            SimpleDateFormat sdh = new SimpleDateFormat("HH:mm:ss");
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            int l = tabelaSaida.getSelectedRow();
            ControleExpedienteBEAN c = new ControleExpedienteBEAN();
            controleDAO cdao = new controleDAO();
            c.setHora_entrada(sdh.format(new Date()));
            c.setId((int)tabelaSaida.getValueAt(l, 0));
            cdao.altera_controle(c);
            readJTable_controle();
            definirHorarioEntradaSaida.setEnabled(false);
            txt_info2.setText("Dispositivo de vídeo:" + Webcam.getDefault().toString() + "  -- Data e hora da útima atualização:" + sdf.format(new Date()) + " " + sdh.format(new Date()));
        }catch(SQLException ex){
            System.err.println("Erro na atualização!"+ex);
        }

    }//GEN-LAST:event_definirHorarioEntradaSaidaActionPerformed

    private void ferramentas_adm_controle_saidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ferramentas_adm_controle_saidaActionPerformed
        Login login = new Login();
        login.setDefaultCloseOperation(login.DISPOSE_ON_CLOSE);
        login.setLocationRelativeTo(null);
        login.setVisible(true);
    }//GEN-LAST:event_ferramentas_adm_controle_saidaActionPerformed

    private void listaPesquisaSaidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaPesquisaSaidaMouseClicked
        try {
            String selected = listaPesquisaSaida.getSelectedValue().toString();
            int id = selected.indexOf(" ");
            String grad_posto = selected.substring(0,id);
            String nome_guerra = selected.substring(id+1);
            ResultadoPesquisa_controle(grad_posto, nome_guerra);
        } catch (SQLException ex) {
            System.err.println("Erro1");
        } catch (IOException ex) {
            System.err.println("Erro2");
        }
        redefinirSaida.setEnabled(true);
        salvarSaida.setEnabled(false);
        novoSaida.setEnabled(true);
        nomeGuerraSaida.setEnabled(false);
        sessaoSaida.setEnabled(false);
        postoGraduacaoSaida.setEnabled(false);
        capturarVideoSaida.setEnabled(false);
        motivoSaida.setEnabled(false);
    }//GEN-LAST:event_listaPesquisaSaidaMouseClicked

    private void tabelaSaidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaSaidaMouseClicked
        try {
            Integer id2 = (Integer) tabelaSaida.getValueAt(tabelaSaida.getSelectedRow(),0);
            controleDAO cdao = new controleDAO();
            if(tabelaSaida.getValueAt(tabelaSaida.getSelectedRow(), 6).equals("")){
                definirHorarioEntradaSaida.setEnabled(true);
            }else{
                definirHorarioEntradaSaida.setEnabled(false);
            }
            ControleExpedienteBEAN retorno = cdao.buscaImg_controle(id2);
            exibirImagemLabel(retorno.getImagem(),fotoSaida);
        } catch (SQLException ex) {
            Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabelaSaidaMouseClicked

    private void pesquisaSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaSaidaActionPerformed
        listaPesquisaSaida.setVisible(false);
    }//GEN-LAST:event_pesquisaSaidaActionPerformed

    private void pesquisaSaidaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisaSaidaKeyReleased
        try {
            ListaPesquisaSaidaAux();
        } catch (SQLException ex) {
            Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pesquisaSaidaKeyReleased

    private void sair_controleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sair_controleActionPerformed
        System.exit(0);
    }//GEN-LAST:event_sair_controleActionPerformed

    private void definirHorarioEntradaEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_definirHorarioEntradaEntradaActionPerformed
        try{
            SimpleDateFormat sdh = new SimpleDateFormat("HH:mm:ss");
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            int l = tabelaEntrada.getSelectedRow();
            ControleForaExpedienteBEAN cf = new ControleForaExpedienteBEAN();
            controlefDAO cfdao = new controlefDAO();
            cf.setHora_saida(sdh.format(new Date()));
            cf.setId((int)tabelaEntrada.getValueAt(l, 0));
            cfdao.altera_controlef(cf);
            readJTable_controlef();
            definirHorarioEntradaEntrada.setEnabled(false);
            txt_info3.setText("Dispositivo de vídeo:" + Webcam.getDefault().toString() + "  -- Data e hora da útima atualização:" + sdf.format(new Date()) + " " + sdh.format(new Date()));
        }catch(SQLException ex){
            System.err.println("Erro na atualização!"+ex);
        }
    }//GEN-LAST:event_definirHorarioEntradaEntradaActionPerformed

    private void ferramentas_adm_controle_entradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ferramentas_adm_controle_entradaActionPerformed
        Login login = new Login();
        login.setDefaultCloseOperation(login.DISPOSE_ON_CLOSE);
        login.setLocationRelativeTo(null);
        login.setVisible(true);
    }//GEN-LAST:event_ferramentas_adm_controle_entradaActionPerformed

    private void listaPesquisaEntradaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaPesquisaEntradaMouseClicked
        try {
            String selected = listaPesquisaEntrada.getSelectedValue().toString();
            int id = selected.indexOf(" ");
            String grad_posto = selected.substring(0,id);
            String nome_guerra = selected.substring(id+1);
            ResultadoPesquisa_controlef(grad_posto, nome_guerra);
        }catch (IOException ex) {
            Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        redefinirEntrada.setEnabled(true);
        salvarEntrada.setEnabled(false);
        novoEntrada.setEnabled(true);
        nomeGuerraEntrada.setEnabled(false);
        sessaoEntrada.setEnabled(false);
        postoGraduacaoEntrada.setEnabled(false);
        capturarVideoEntrada.setEnabled(false);
        motivoEntrada.setEnabled(false);
    }//GEN-LAST:event_listaPesquisaEntradaMouseClicked

    private void tabelaEntradaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaEntradaMouseClicked
        try {
            Integer id2 = (Integer) tabelaEntrada.getValueAt(tabelaEntrada.getSelectedRow(),0);
            controlefDAO cfdao = new controlefDAO();
            if(tabelaEntrada.getValueAt(tabelaEntrada.getSelectedRow(), 6).equals("")){
                definirHorarioEntradaEntrada.setEnabled(true);
            }else{
                definirHorarioEntradaEntrada.setEnabled(false);
            }
            ControleForaExpedienteBEAN retorno = cfdao.buscaImg_controlef(id2);
            exibirImagemLabel(retorno.getImagem(),fotoEntrada);
        } catch (SQLException ex) {
            Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabelaEntradaMouseClicked

    private void pesquisaEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaEntradaActionPerformed
        listaPesquisaSaida.setVisible(false);
    }//GEN-LAST:event_pesquisaEntradaActionPerformed

    private void pesquisaEntradaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisaEntradaKeyReleased
        ListaPesquisaEntradaAux();
    }//GEN-LAST:event_pesquisaEntradaKeyReleased

    private void sair_controle1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sair_controle1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_sair_controle1ActionPerformed

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        listaPesquisaSaida.setVisible(false);
    }//GEN-LAST:event_jPanel2MouseClicked

    private void jPanel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseClicked
        listaPesquisaEntrada.setVisible(false);
    }//GEN-LAST:event_jPanel7MouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        listaPesquisaVisitantes.setVisible(false);
    }//GEN-LAST:event_jPanel1MouseClicked

    private void associarVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_associarVeiculoActionPerformed
        VeiculosFrame vf = new VeiculosFrame();
        vf.setDefaultCloseOperation(vf.DISPOSE_ON_CLOSE);
        vf.setLocationRelativeTo(null);
        vf.setVisible(true);
    }//GEN-LAST:event_associarVeiculoActionPerformed

    private void sair_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sair_buttonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_sair_buttonActionPerformed

    private void c13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c13ActionPerformed

    private void c16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c16ActionPerformed

    private void c8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c8ActionPerformed

    private void c9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c9ActionPerformed

    private void c7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c7ActionPerformed

    private void c6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c6ActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c1ActionPerformed

    private void c10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c10ActionPerformed

    private void c5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c5ActionPerformed

    private void c3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c3ActionPerformed

    private void c2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c2ActionPerformed

    private void c4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c4ActionPerformed

    private void ferramentas_adm_visitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ferramentas_adm_visitanteActionPerformed
        Login login = new Login();
        login.setDefaultCloseOperation(login.DISPOSE_ON_CLOSE);
        login.setLocationRelativeTo(null);
        login.setVisible(true);
    }//GEN-LAST:event_ferramentas_adm_visitanteActionPerformed

    private void novoVisitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoVisitanteActionPerformed
        novoVisitante();
    }//GEN-LAST:event_novoVisitanteActionPerformed

    private void destinoVisitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destinoVisitanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_destinoVisitanteActionPerformed

    private void iniciarVideoRegistroVisitantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarVideoRegistroVisitantesActionPerformed
        new Thread(){
            public void run(){
                executando = true;
                fotoVisitante.setText("Iniciando...");
                WEBCAM.open();
                fotoVisitante.setText("");
                INICIALIZA_VIDEO(fotoVisitante);
                capturarVideoRegistroVisitantes.setEnabled(true);
            }
        }.start();
    }//GEN-LAST:event_iniciarVideoRegistroVisitantesActionPerformed

    private void nomeCompletoVisitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeCompletoVisitanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeCompletoVisitanteActionPerformed

    private void definirHorarioSaidaVisitantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_definirHorarioSaidaVisitantesActionPerformed
        SimpleDateFormat sdh = new SimpleDateFormat("HH:mm:ss");
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        int cracha;
        int l = tabelaVisitantes.getSelectedRow();
        CadastroBEAN c = new CadastroBEAN();
        cadastroDAO dao = new cadastroDAO();
        c.setHoraS(sdh.format(new Date()));
        c.setId((int)tabelaVisitantes.getValueAt(l, 0));
        try {
            dao.altera(c);
        } catch (SQLException ex) {
            Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        }

        readJTable();
        definirHorarioSaidaVisitantes.setEnabled(false);
        txt_info.setText("Dispositivo de vídeo:" + Webcam.getDefault().toString() + "  -- Data e hora da útima atualização:" + sdf.format(new Date()) + " " + sdh.format(new Date()));
        try {
            verifica_check();
        } catch (SQLException ex) {
            Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_definirHorarioSaidaVisitantesActionPerformed

    private void tabelaVisitantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaVisitantesMouseClicked
        try {
            Integer id = (Integer) tabelaVisitantes.getValueAt(tabelaVisitantes.getSelectedRow(),0);
            cadastroDAO dao = new cadastroDAO();
            if(tabelaVisitantes.getValueAt(tabelaVisitantes.getSelectedRow(), 11) == null){
                definirHorarioSaidaVisitantes.setEnabled(true);
            }else{
                definirHorarioSaidaVisitantes.setEnabled(false);
            }
            CadastroBEAN retorno = dao.buscaImg(id);
            exibirImagemLabel(retorno.getFoto(),fotoVisitante);
        } catch (SQLException ex) {
            System.err.println("Erro tableMouseClicked!");
        }
    }//GEN-LAST:event_tabelaVisitantesMouseClicked

    private void capturarVideoRegistroVisitantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capturarVideoRegistroVisitantesActionPerformed
        try {
            ByteArrayOutputStream buff = new ByteArrayOutputStream();
            ImageIO.write(WEBCAM.getImage(), "JPEG", buff);
            byte[] bytes = buff.toByteArray();

            ByteArrayInputStream is = new ByteArrayInputStream(bytes);
            BufferedImage imagem = ImageIO.read(is);

            int nova_largura = fotoVisitante.getWidth(), nova_altura = fotoVisitante.getHeight();
            BufferedImage new_img = new BufferedImage(nova_largura, nova_altura, BufferedImage.TYPE_INT_RGB);
            Graphics2D g = new_img.createGraphics();
            g.drawImage(imagem,0,0,nova_largura,nova_altura,null);
            imageArrayVisitantes = new_img;
        } catch (IOException ex) {
            Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        }

        new Thread(){
            public void run(){
                WEBCAM.close();
                executando = false;
                capturarVideoRegistroVisitantes.setEnabled(false);
            }
        }.start();
    }//GEN-LAST:event_capturarVideoRegistroVisitantesActionPerformed

    private void redefinirVisitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redefinirVisitanteActionPerformed
        redefinirVisitante();
    }//GEN-LAST:event_redefinirVisitanteActionPerformed

    private void salvarVisitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarVisitanteActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat sdh = new SimpleDateFormat("HH:mm:ss");
        CadastroBEAN c = new CadastroBEAN();
        cadastroDAO dao = new cadastroDAO();
        int cracha;

        //VERIFICA SE JÁ EXISTE UM CADASTRO COM O MESMO NOME--------------------
        try {
            if(dao.busca_nome(nomeCompletoVisitante.getText().toUpperCase())== true && redefinirVisitantesAux == 0){
                JOptionPane.showMessageDialog(null,"O Sr.(a) " + nomeCompletoVisitante.getText() + " já existe no banco de dados!\n Por favor utilize o campo de busca ou digite outro nome.");
                return;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        //----------------------------------------------------------------------
        //VERIFICA SE OS CAMPOS OBRIGATÓRIOS FORAM PREENCHIDOS------------------
        if(nomeCompletoVisitante.getText().equals("")){
            JOptionPane.showMessageDialog(null,"O campo 'Nome Completo' não pode ser vazio!");
            return;
        }
        if(numeroDocumentoVisitante.getText().equals("")){
            JOptionPane.showMessageDialog(null,"O campo 'Número Documento' não pode ser vazio!");
            return;
        }
        if(destinoVisitante.getText().equals("")){
            JOptionPane.showMessageDialog(null,"O campo 'Destino' não pode ser vazio!");
            return;
        }
        if(comQuemFalarVisitante.getText().equals("")){
            JOptionPane.showMessageDialog(null,"O campo 'Com quem falar' não pode ser vazio!");
            return;
        }
        if( telefoneVisitante == null){
            JOptionPane.showMessageDialog(null,"O campo 'Telefone' não pode ser vazio!");
            return;
        }
        if(tipoDocumentoVisitante.getSelectedItem().toString().equals("Selecione...")){
            JOptionPane.showMessageDialog(null,"O campo 'Tipo Documento' não pode ser vazio!");
            return;
        }
        if(civil.isSelected()== true){
            c.setTipoVisitante("Civil");
        }
        else if(militar.isSelected()== true){
            c.setTipoVisitante("Militar");
        }
        else if(fornecedor.isSelected()== true){
            c.setTipoVisitante("Fornecedor");
        }else{
            JOptionPane.showMessageDialog(null,"Selecione o tipo do visitante!");
            return;
        }
        //----------------------------------------------------------------------
        //VERIFICA SE A IMAGEM DO USUÁRIO FOI CAPTURADA-------------------------
        if(imageArrayVisitantes == null && webcam_found){
            JOptionPane.showMessageDialog(null,"Não foi capturada uma imagem do usuário!");
            return;
        }else if(webcam_found){
            try {
                c.setFoto(getImgBytes(imageArrayVisitantes));
            } catch (IOException ex) {
                Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null,"Favor procure um dispositivo de video!\n O registro foi salvo sem imagem!");
        }
        //----------------------------------------------------------------------
        //VERIFICA QUAL CRACHÁ FOI SELECIONADO----------------------------------
        if(c1.isSelected()){
            cracha = 1;
            c.setN_cracha(cracha);
            c1.setEnabled(false);
        }
        else if(c2.isSelected()){
            cracha = 2;
            c.setN_cracha(cracha);
            c2.setEnabled(false);
        }
        else if(c3.isSelected()){
            cracha = 3;
            c.setN_cracha(cracha);
            c3.setEnabled(false);
        }
        else if(c4.isSelected()){
            cracha = 4;
            c.setN_cracha(cracha);
            c4.setEnabled(false);
        }
        else if(c5.isSelected()){
            cracha = 5;
            c.setN_cracha(cracha);
            c5.setEnabled(false);
        }
        else if(c6.isSelected()){
            cracha = 6;
            c.setN_cracha(cracha);
            c6.setEnabled(false);
        }
        else if(c7.isSelected()){
            cracha = 7;
            c.setN_cracha(cracha);
            c7.setEnabled(false);
        }
        else if(c8.isSelected()){
            cracha = 8;
            c.setN_cracha(cracha);
            c8.setEnabled(false);
        }
        else if(c9.isSelected()){
            cracha = 9;
            c.setN_cracha(cracha);
            c9.setEnabled(false);
        }
        else if(c10.isSelected()){
            cracha = 10;
            c.setN_cracha(cracha);
            c10.setEnabled(false);
        }
        else if(c11.isSelected()){
            cracha = 11;
            c.setN_cracha(cracha);
            c11.setEnabled(false);
        }
        else if(c12.isSelected()){
            cracha = 12;
            c.setN_cracha(cracha);
            c12.setEnabled(false);
        }
        else if(c13.isSelected()){
            cracha = 13;
            c.setN_cracha(cracha);
            c13.setEnabled(false);
        }
        else if(c14.isSelected()){
            cracha = 14;
            c.setN_cracha(cracha);
            c14.setEnabled(false);
        }
        else if(c15.isSelected()){
            cracha = 15;
            c.setN_cracha(cracha);
            c15.setEnabled(false);
        }
        else if(c16.isSelected()){
            cracha = 16;
            c.setN_cracha(cracha);
            c16.setEnabled(false);
        }
        else if(c17.isSelected()){
            cracha = 17;
            c.setN_cracha(cracha);
            c17.setEnabled(false);
        }
        else if(c18.isSelected()){
            cracha = 18;
            c.setN_cracha(cracha);
            c18.setEnabled(false);
        }
        else if(c19.isSelected()){
            cracha = 19;
            c.setN_cracha(cracha);
            c19.setEnabled(false);
        }
        else if(c20.isSelected()){
            cracha = 20;
            c.setN_cracha(cracha);
            c20.setEnabled(false);
        }else{
            JOptionPane.showMessageDialog(null,"O usuário precisa estar relacionado à um crachá!");
            return;
        }
        //----------------------------------------------------------------------
        //PREENCHE CAMPOS BEAN RESTANTES----------------------------------------
        c.setNomeCompleto(nomeCompletoVisitante.getText().toUpperCase());
        c.setDocumentoIden(numeroDocumentoVisitante.getText());
        c.setDestino(destinoVisitante.getText().toUpperCase());
        c.setComquemFalar(comQuemFalarVisitante.getText().toUpperCase());
        c.setTelefone(telefoneVisitante.getText());
        c.setTipoDocumento(tipoDocumentoVisitante.getSelectedItem().toString()); 
        c.setData(sdf.format(new Date()));
        c.setHoraE(sdh.format(new Date()));
        c.setHoraS(null);
        c.setCor_veiculo(VeiculosFrame.cor);
        c.setModelo_veiculo(VeiculosFrame.modelo);
        c.setMarca_veiculo(VeiculosFrame.marca);
        c.setPlaca_veiculo(VeiculosFrame.placa2);
        //----------------------------------------------------------------------
        //RESETA FRAME VEICULOS-------------------------------------------------
        VeiculosFrame.cor = null;
        VeiculosFrame.modelo = null;
        VeiculosFrame.marca = null;
        VeiculosFrame.placa2 = null;
        //----------------------------------------------------------------------
        //INSERE REGISTRO NO BANCO DE DADOS-------------------------------------
        dao.create(c);
        //----------------------------------------------------------------------
        //FAZ UPDATE NA TABELA VISITANTES---------------------------------------
        readJTable();
        //----------------------------------------------------------------------
        //CHAMA NOVO ESTADO DA TELA---------------------------------------------
        estadoInicialVisitantes();
        //----------------------------------------------------------------------
        //COLOCA TEXTO DE OBSERVAÇÃO--------------------------------------------
        if(webcam_found == true){
            txt_info.setText("Dispositivo de vídeo:" + Webcam.getDefault().toString() + "  -- Data e hora da útima atualização:" + sdf.format(new Date()) + " " + sdh.format(new Date()));
        }else{
            txt_info.setText("Dispositivo de vídeo:" + " Nenhum" + "  -- Data e hora da útima atualização:" + sdf.format(new Date()) + " " + sdh.format(new Date()));
        }
    }//GEN-LAST:event_salvarVisitanteActionPerformed

    private void telefoneVisitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telefoneVisitanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telefoneVisitanteActionPerformed

    private void comQuemFalarVisitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comQuemFalarVisitanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comQuemFalarVisitanteActionPerformed

    private void tipoDocumentoVisitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoDocumentoVisitanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoDocumentoVisitanteActionPerformed

    private void pesquisaRegistroVisitantesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisaRegistroVisitantesKeyReleased
        try {
            ListaPesquisaVisitantesAux();
        } catch (SQLException ex) {
            Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pesquisaRegistroVisitantesKeyReleased

    private void pesquisaRegistroVisitantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaRegistroVisitantesActionPerformed
        listaPesquisaVisitantes.setVisible(false);
    }//GEN-LAST:event_pesquisaRegistroVisitantesActionPerformed

    private void listaPesquisaVisitantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaPesquisaVisitantesMouseClicked
        listaPesquisaVisitantes.setVisible(false);   
        estadoInicialVisitantes();
        try {
                ResultadoPesquisa();
        } catch (SQLException ex) {
                Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
                Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listaPesquisaVisitantesMouseClicked

    private void novoSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoSaidaActionPerformed
        novoSaida();
    }//GEN-LAST:event_novoSaidaActionPerformed

    private void redefinirSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redefinirSaidaActionPerformed
        redefinirSaida();
    }//GEN-LAST:event_redefinirSaidaActionPerformed

    private void salvarSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarSaidaActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat sdh = new SimpleDateFormat("HH:mm:ss");
        Date data = new Date();
        controleDAO cdao = new controleDAO();
        ControleExpedienteBEAN c = new ControleExpedienteBEAN();
        String hora_saida;
        String aux;
        int hora;
        int minuto;

        //VERIFICA O HORÁRIO DO REGISTRO----------------------------------------
        hora_saida = sdh.format(new Date());
        aux = hora_saida.substring(0,2) + hora_saida.substring(3,5);
        hora = Integer.parseInt(String.valueOf(aux));
        Calendar cal = Calendar.getInstance();
        cal.setTime(data);
        int day = cal.get(Calendar.DAY_OF_WEEK);
        if((hora >= 900 & hora <= 1700) & day != 6 & day != 7 & day != 1 ) {
            c.setData(sdf.format(new Date()));
            c.setHora_saida(sdh.format(new Date()));
            c.setHora_entrada("");
        }else if((day == 6) & (hora >= 800 & hora <= 1200)){
            c.setData(sdf.format(new Date()));
            c.setHora_saida(sdh.format(new Date()));
            c.setHora_entrada("");
        }else{
            JOptionPane.showMessageDialog(null, "Registro fora do horário de expediente.\n");
            return;
        }
        //----------------------------------------------------------------------
        //VERIFICA SE JÁ EXISTE CADASTRO NO BANCO DE DADOS----------------------
        try {
            if(cdao.busca_nome_controle(postoGraduacaoSaida.getSelectedItem().toString(),nomeGuerraSaida.getText().toUpperCase())==true && redefinirSaidaAux == 0){
                JOptionPane.showMessageDialog(null,"O Sr.(a) " + postoGraduacaoSaida.getSelectedItem().toString() + " " + nomeGuerraSaida.getText().toUpperCase() + " já existe no banco de dados!\n Por favor utilize o campo de busca ou digite outro nome.");
                return;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        //----------------------------------------------------------------------
        //VERIFICA SE TODOS OS CAMPOS OBRIGATÓRIOS FORAM PREENCHIDOS------------
        if(nomeGuerraSaida.getText().equals("")){
            JOptionPane.showMessageDialog(null,"O campo 'Nome de guerra' não pode ser vazio!");
            return;
        }
        if(postoGraduacaoSaida.getSelectedItem().toString().equals("Selecione...")){
            JOptionPane.showMessageDialog(null,"O campo 'Posto/Graduação' não pode ser vazio!");
            return;
        }
        if(sessaoSaida.getSelectedItem().toString().equals("Selecione...")){
            JOptionPane.showMessageDialog(null,"O campo 'Sessão' não pode ser vazio!");
            return;
        }
        if(motivoSaida.getText().equals("")){
            JOptionPane.showMessageDialog(null,"O campo 'Motivo' não pode ser vazio!");
            return;
        }
        //----------------------------------------------------------------------
        //VERIFICA SE A IMAGEM DO USUÁRIO FOI CAPTURADA-------------------------
        if(imageArraySaida == null && webcam_found == true){
            JOptionPane.showMessageDialog(null,"Não foi capturada uma imagem do usuário!");
            return;
        }else if(webcam_found == true){
            try {
                c.setImagem(getImgBytes(imageArraySaida));
            } catch (IOException ex) {

            }
        }else{
            JOptionPane.showMessageDialog(null,"Favor procure um dispositivo de video!\n O registro foi salvo sem imagem!");
        }
        //----------------------------------------------------------------------
        //PREENCHE CAMPOS BEAN RESTANTES----------------------------------------
        c.setNome_guerra(nomeGuerraSaida.getText().toUpperCase());
        c.setGrad_posto(postoGraduacaoSaida.getSelectedItem().toString());
        c.setSessao(sessaoSaida.getSelectedItem().toString());
        c.setMotivo_saida(motivoSaida.getText().toUpperCase());
        //INSERE REGISTRO NO BANCO DE DADOS-------------------------------------
        cdao.create(c);
        //----------------------------------------------------------------------
        //FAZ UPDATE NA TABELA SAÍDA--------------------------------------------
        readJTable_controle();
        //----------------------------------------------------------------------
        //SETA O ESTADO ATUAL DA TELA-------------------------------------------
        estadoInicialSaida();
        //----------------------------------------------------------------------
        //COLOCA TEXTO DE OBSERVAÇÃO--------------------------------------------
        if(webcam_found = true){
            txt_info2.setText("Dispositivo de vídeo:" + Webcam.getDefault().toString() + "  -- Data e hora da útima atualização:" + sdf.format(new Date()) + " " + sdh.format(new Date())+
                "\n\nObservações: O registro de saída de CB/SD só deve ser feito durante o horário de expediente;"
                + "\nCaso o expediente acabe e o militar não tenha retornado, o horário de entrada deve ficar em branco;"
                + "\nSempre ao adicionar um novo registro preste atenção ao preenchimento correto dos campos.");
        }else{
            txt_info2.setText("Dispositivo de vídeo: Nenhum" + "  -- Data e hora da útima atualização:" + sdf.format(new Date()) + " " + sdh.format(new Date())+
                "\n\nObservações: O registro de saída de CB/SD só deve ser feito durante o horário de expediente;"
                + "\nCaso o expediente acabe e o militar não tenha retornado, o horário de entrada deve ficar em branco;"
                + "\nSempre ao adicionar um novo registro preste atenção ao preenchimento correto dos campos.");
        }
        //----------------------------------------------------------------------
    }//GEN-LAST:event_salvarSaidaActionPerformed

    private void capturarVideoSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capturarVideoSaidaActionPerformed
        new Thread(){
            public void run(){
                WEBCAM.close();
                executando = false;
                capturarVideoSaida.setEnabled(false);
            }
        }.start();
    }//GEN-LAST:event_capturarVideoSaidaActionPerformed

    private void iniciarVideoSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarVideoSaidaActionPerformed
        new Thread(){
            public void run(){
                executando = true;
                fotoSaida.setText("Iniciando...");
                WEBCAM.open();
                fotoSaida.setText("");
                INICIALIZA_VIDEO(fotoSaida);
                capturarVideoSaida.setEnabled(true);
            }
        }.start();
    }//GEN-LAST:event_iniciarVideoSaidaActionPerformed

    private void redefinirEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redefinirEntradaActionPerformed
        redefinirEntrada();
    }//GEN-LAST:event_redefinirEntradaActionPerformed

    private void salvarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarEntradaActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat sdh = new SimpleDateFormat("HH:mm:ss");
        
        controlefDAO cfdao = new controlefDAO();
        ControleForaExpedienteBEAN cf = new ControleForaExpedienteBEAN();
        String posto;
        String sessao;
        posto = (String) postoGraduacaoEntrada.getSelectedItem();
        sessao = (String) sessaoEntrada.getSelectedItem();
        String hora_saida;
        String aux;
        int hora;
        int minuto;
        Date data = new Date();
        
        //VERIFICA O HORÁRIO DO REGISTRO----------------------------------------
        hora_saida = sdh.format(new Date());
        aux = hora_saida.substring(0,2) + hora_saida.substring(3,5);
        hora = Integer.parseInt(String.valueOf(aux));
        Calendar cal = Calendar.getInstance();
        cal.setTime(data);
        int day = cal.get(Calendar.DAY_OF_WEEK);
        if((hora > 1700 || hora < 900) & day != 6) {
            cf.setData(sdf.format(new Date()));
            cf.setHora_entrada(sdh.format(new Date()));
            cf.setHora_saida("");
        }else if((day == 6) & (hora > 1200 || hora < 800)){
            cf.setData(sdf.format(new Date()));
            cf.setHora_entrada(sdh.format(new Date()));
            cf.setHora_saida("");
        }else if(day == 7 || day == 1){
             cf.setData(sdf.format(new Date()));
            cf.setHora_entrada(sdh.format(new Date()));
            cf.setHora_saida("");
        }else{
            JOptionPane.showMessageDialog(null, "Registro dentro do horário de expediente.\n");
            return;
        }
        //----------------------------------------------------------------------
        //VERIFICA SE O NOME JÁ EXISTE NO BANCO DE DADOS------------------------
        try {
            if(cfdao.busca_nome_controlef(postoGraduacaoEntrada.getSelectedItem().toString(), nomeGuerraEntrada.getText().toUpperCase()) == true && redefinirEntradaAux == 0){
                JOptionPane.showMessageDialog(null,"O Sr.(a) " + postoGraduacaoEntrada.getSelectedItem().toString() + " " + nomeGuerraEntrada.getText() + " já existe no banco de dados!\n Por favor utilize o campo de busca ou digite outro nome.");
                return;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        //----------------------------------------------------------------------
        //VERIFICA SE OS CAMPOS OBRIGATÓRIOS FORAM PREENCHIDOS------------------
        if(nomeGuerraEntrada.getText().equals("")){
            JOptionPane.showMessageDialog(null,"O campo 'Nome de guerra' não pode ser vazio!");
            return;
        }
        if(posto.equals("Selecione...")){
            JOptionPane.showMessageDialog(null,"O campo 'Posto/Graduação' não pode ser vazio!");
            return;
        }
        if(sessao.equals("Selecione...")){
            JOptionPane.showMessageDialog(null,"O campo 'Sessão' não pode ser vazio!");
            return;
        }
        if(motivoEntrada.getText().equals("")){
            JOptionPane.showMessageDialog(null,"O campo 'Motivo de Entrada' não pode ser vazio!");
            return;
        }
        //----------------------------------------------------------------------
        //VERIFICA SE A FOTO DO USUÁRIO FOI CAPTURADA---------------------------
        if(imageArrayEntrada == null && webcam_found == true){
            JOptionPane.showMessageDialog(null,"Não foi capturada uma imagem do usuário!");
            return;
        }else if(webcam_found == true){
            try {
                cf.setImagem(getImgBytes(imageArrayEntrada));
            } catch (IOException ex) {

            }

        }else{
            JOptionPane.showMessageDialog(null,"Favor procure um dispositivo de video!\n O registro foi salvo sem imagem!");
        }
        //----------------------------------------------------------------------
        //PREENCHE OS CAMPOS BEANS RESTANTES------------------------------------
        cf.setNome_guerra(nomeGuerraEntrada.getText().toUpperCase());
        cf.setGrad_posto(posto);
        cf.setSessao(sessao);
        cf.setMotivo_entrada(motivoEntrada.getText().toUpperCase());
        //----------------------------------------------------------------------
        //INSERE O REGISTRO NO BANCO DE DADOS-----------------------------------
        cfdao.create(cf);
        //----------------------------------------------------------------------
        //FAZ O UPDATE NA TABELA------------------------------------------------
        readJTable_controlef();
        //----------------------------------------------------------------------
        //SETA O ESTADO DA TELA-------------------------------------------------
        estadoInicialEntrada();
        //----------------------------------------------------------------------
        //ATUALIZA AS OBSERVAÇÕES-----------------------------------------------
        if(webcam_found = true){
            txt_info3.setText("Dispositivo de vídeo:" + Webcam.getDefault().toString() + 
                "  -- Data e hora da útima atualização:" + sdf.format(new Date()) + 
                " " + sdh.format(new Date()) + 
                "\n\nObservações: O registro fora do expediente só deve ser feito entre os horários:\n17h às 9h segunda a quarta/quinta\n17h às 8h quinta/sexta\nDurante todo o final de semana e feriados.");
        }else{
            txt_info3.setText("Dispositivo de vídeo: Nenhum"+ 
                "  -- Data e hora da útima atualização:" + sdf.format(new Date()) + 
                " " + sdh.format(new Date()) + 
                "\n\nObservações: O registro fora do expediente só deve ser feito entre os horários:\n17h às 9h segunda a quarta/quinta\n17h às 8h quinta/sexta\nDurante todo o final de semana e feriados.");
        }
        //----------------------------------------------------------------------
    }//GEN-LAST:event_salvarEntradaActionPerformed

    private void novoEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoEntradaActionPerformed
        novoEntrada();
    }//GEN-LAST:event_novoEntradaActionPerformed

    private void iniciarVideoEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarVideoEntradaActionPerformed
        new Thread(){
            public void run(){
                executando = true;
                fotoEntrada.setText("Iniciando...");
                WEBCAM.open();
                fotoEntrada.setText("");
                INICIALIZA_VIDEO(fotoEntrada);
                capturarVideoEntrada.setEnabled(true);
            }
        }.start();
    }//GEN-LAST:event_iniciarVideoEntradaActionPerformed

    private void capturarVideoEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capturarVideoEntradaActionPerformed
        new Thread(){
            public void run(){
                WEBCAM.close();
                executando = false;
                capturarVideoEntrada.setEnabled(false);
            }
        }.start();
    }//GEN-LAST:event_capturarVideoEntradaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("GTK+".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Cadastro().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton associarVeiculo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox c1;
    private javax.swing.JCheckBox c10;
    private javax.swing.JCheckBox c11;
    private javax.swing.JCheckBox c12;
    private javax.swing.JCheckBox c13;
    private javax.swing.JCheckBox c14;
    private javax.swing.JCheckBox c15;
    private javax.swing.JCheckBox c16;
    private javax.swing.JCheckBox c17;
    private javax.swing.JCheckBox c18;
    private javax.swing.JCheckBox c19;
    private javax.swing.JCheckBox c2;
    private javax.swing.JCheckBox c20;
    private javax.swing.JCheckBox c3;
    private javax.swing.JCheckBox c4;
    private javax.swing.JCheckBox c5;
    private javax.swing.JCheckBox c6;
    private javax.swing.JCheckBox c7;
    private javax.swing.JCheckBox c8;
    private javax.swing.JCheckBox c9;
    private javax.swing.JButton capturarVideoEntrada;
    private javax.swing.JButton capturarVideoRegistroVisitantes;
    private javax.swing.JButton capturarVideoSaida;
    public static javax.swing.JRadioButton civil;
    private javax.swing.JTextField comQuemFalarVisitante;
    private javax.swing.JButton definirHorarioEntradaEntrada;
    private javax.swing.JButton definirHorarioEntradaSaida;
    private javax.swing.JButton definirHorarioSaidaVisitantes;
    private javax.swing.JTextField destinoVisitante;
    private javax.swing.JButton ferramentas_adm_controle_entrada;
    private javax.swing.JButton ferramentas_adm_controle_saida;
    private javax.swing.JButton ferramentas_adm_visitante;
    public static javax.swing.JRadioButton fornecedor;
    public static javax.swing.JLabel fotoEntrada;
    public static javax.swing.JLabel fotoSaida;
    public static javax.swing.JLabel fotoVisitante;
    private javax.swing.JButton iniciarVideoEntrada;
    private javax.swing.JButton iniciarVideoRegistroVisitantes;
    private javax.swing.JButton iniciarVideoSaida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList<String> listaPesquisaEntrada;
    private javax.swing.JList<String> listaPesquisaSaida;
    private javax.swing.JList<String> listaPesquisaVisitantes;
    public static javax.swing.JRadioButton militar;
    private javax.swing.JTextField motivoEntrada;
    private javax.swing.JTextField motivoSaida;
    public static javax.swing.JTextField nomeCompletoVisitante;
    private javax.swing.JTextField nomeGuerraEntrada;
    private javax.swing.JTextField nomeGuerraSaida;
    private javax.swing.JButton novoEntrada;
    private javax.swing.JButton novoSaida;
    private javax.swing.JButton novoVisitante;
    public static javax.swing.JTextField numeroDocumentoVisitante;
    private javax.swing.JTextField pesquisaEntrada;
    private javax.swing.JTextField pesquisaRegistroVisitantes;
    private javax.swing.JTextField pesquisaSaida;
    private javax.swing.JComboBox<String> postoGraduacaoEntrada;
    private javax.swing.JComboBox<String> postoGraduacaoSaida;
    private javax.swing.JButton redefinirEntrada;
    private javax.swing.JButton redefinirSaida;
    private javax.swing.JButton redefinirVisitante;
    private javax.swing.JButton sair_button;
    private javax.swing.JButton sair_controle;
    private javax.swing.JButton sair_controle1;
    private javax.swing.JButton salvarEntrada;
    private javax.swing.JButton salvarSaida;
    private javax.swing.JButton salvarVisitante;
    private javax.swing.JComboBox<String> sessaoEntrada;
    private javax.swing.JComboBox<String> sessaoSaida;
    private javax.swing.JTable tabelaEntrada;
    private javax.swing.JTable tabelaSaida;
    public static javax.swing.JTable tabelaVisitantes;
    public static javax.swing.JFormattedTextField telefoneVisitante;
    public static javax.swing.JComboBox<String> tipoDocumentoVisitante;
    private javax.swing.JLabel txtVisitante;
    private javax.swing.JTextPane txt_info;
    private javax.swing.JTextPane txt_info2;
    private javax.swing.JTextPane txt_info3;
    // End of variables declaration//GEN-END:variables
    //ESTADOS DA UI-------------------------------------------------------------
    public void estadoInicialVisitantes(){
        //VISITANTES------------------------------------------------------------
            //BOTÕES DE AÇÃO----------------------------------------------------
                novoVisitante.setEnabled(true);
                redefinirVisitante.setEnabled(false);
                salvarVisitante.setEnabled(false);
                associarVeiculo.setEnabled(false);
                iniciarVideoRegistroVisitantes.setEnabled(false);
                capturarVideoRegistroVisitantes.setEnabled(false);
                definirHorarioSaidaVisitantes.setEnabled(false);
            //CAMPOS DE TEXTO---------------------------------------------------
                pesquisaRegistroVisitantes.setEnabled(true);
                nomeCompletoVisitante.setEnabled(false);
                tipoDocumentoVisitante.setEnabled(false);
                numeroDocumentoVisitante.setEnabled(false);
                civil.setEnabled(false);
                fornecedor.setEnabled(false);
                militar.setEnabled(false);
                telefoneVisitante.setEnabled(false);
                destinoVisitante.setEnabled(false);
                comQuemFalarVisitante.setEnabled(false);
                
                pesquisaRegistroVisitantes.setText("");
                nomeCompletoVisitante.setText("");
                tipoDocumentoVisitante.setSelectedIndex(0);
                numeroDocumentoVisitante.setText("");
                telefoneVisitante.setText("");
                destinoVisitante.setText("");
                comQuemFalarVisitante.setText("");
                buttonGroup1.clearSelection();
            //CRACHÁ------------------------------------------------------------
                c1.setEnabled(false);
                c2.setEnabled(false);
                c3.setEnabled(false);
                c4.setEnabled(false);
                c5.setEnabled(false);
                c6.setEnabled(false);
                c7.setEnabled(false);
                c8.setEnabled(false);
                c9.setEnabled(false);
                c10.setEnabled(false);
                c11.setEnabled(false);
                c12.setEnabled(false);
                c13.setEnabled(false);
                c14.setEnabled(false);
                c15.setEnabled(false);
                c16.setEnabled(false);
                c17.setEnabled(false);
                c18.setEnabled(false);
                c19.setEnabled(false);
                c20.setEnabled(false);
                buttonGroup2.clearSelection();
            //FOTO--------------------------------------------------------------
                fotoVisitante.setIcon(null);
            //LISTA PESQUISA----------------------------------------------------
                listaPesquisaVisitantes.setVisible(false);
            //TABELA------------------------------------------------------------
                tabelaVisitantes.setEnabled(true);
            //VARIÁVEIS AUXILIARES----------------------------------------------
                redefinirVisitantesAux = 0;
                imageArrayVisitantes = null;
    }
    
    public void novoVisitante(){
        //VISITANTES------------------------------------------------------------
            //BOTÕES DE AÇÃO----------------------------------------------------
                novoVisitante.setEnabled(false);
                redefinirVisitante.setEnabled(false);
                salvarVisitante.setEnabled(true);
                associarVeiculo.setEnabled(true);
                iniciarVideoRegistroVisitantes.setEnabled(true);
                capturarVideoRegistroVisitantes.setEnabled(false);
            //CAMPOS DE TEXTO---------------------------------------------------
                pesquisaRegistroVisitantes.setEnabled(true);
                nomeCompletoVisitante.setEnabled(true);
                tipoDocumentoVisitante.setEnabled(true);
                numeroDocumentoVisitante.setEnabled(true);
                civil.setEnabled(true);
                fornecedor.setEnabled(true);
                militar.setEnabled(true);
                telefoneVisitante.setEnabled(true);
                destinoVisitante.setEnabled(true);
                comQuemFalarVisitante.setEnabled(true);
                
                pesquisaRegistroVisitantes.setText("");
                nomeCompletoVisitante.setText("");
                tipoDocumentoVisitante.setSelectedIndex(0);
                numeroDocumentoVisitante.setText("");
                telefoneVisitante.setText("");
                destinoVisitante.setText("");
                comQuemFalarVisitante.setText("");
                buttonGroup1.clearSelection();
            //CRACHÁ------------------------------------------------------------
                try {
                    verifica_check();
                } catch (SQLException ex) {
                    Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
                buttonGroup2.clearSelection();
            //FOTO--------------------------------------------------------------
                fotoVisitante.setIcon(null);
                executando = false;
            //LISTA PESQUISA----------------------------------------------------
                listaPesquisaVisitantes.setVisible(false);  
            //TABELA------------------------------------------------------------
                tabelaVisitantes.setEnabled(true);
            //VARIÁVEIS AUXILIARES----------------------------------------------
                redefinirVisitantesAux = 0;
                imageArrayVisitantes = null;
    }
    
    public void redefinirVisitante(){
        //VISITANTES------------------------------------------------------------
            //BOTÕES DE AÇÃO----------------------------------------------------
                novoVisitante.setEnabled(true);
                redefinirVisitante.setEnabled(false);
                salvarVisitante.setEnabled(true);
                associarVeiculo.setEnabled(true);
                iniciarVideoRegistroVisitantes.setEnabled(true);
                capturarVideoRegistroVisitantes.setEnabled(false);
            //CAMPOS DE TEXTO---------------------------------------------------
                pesquisaRegistroVisitantes.setEnabled(true);
                nomeCompletoVisitante.setEnabled(false);
                tipoDocumentoVisitante.setEnabled(true);
                numeroDocumentoVisitante.setEnabled(true);
                civil.setEnabled(true);
                fornecedor.setEnabled(true);
                militar.setEnabled(true);
                telefoneVisitante.setEnabled(true);
                destinoVisitante.setEnabled(true);
                comQuemFalarVisitante.setEnabled(true);
                
                destinoVisitante.setText("");
                comQuemFalarVisitante.setText("");
            //CRACHÁ------------------------------------------------------------
                try {
                    verifica_check();
                } catch (SQLException ex) {
                    Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
                buttonGroup2.clearSelection();
            //FOTO--------------------------------------------------------------
            
            //LISTA PESQUISA----------------------------------------------------
                listaPesquisaVisitantes.setVisible(false);  
            //TABELA------------------------------------------------------------
                tabelaVisitantes.setEnabled(true);
            //VARIÁVEIS AUXILIARES----------------------------------------------
                redefinirVisitantesAux = 1;
    }
    
    public void estadoInicialSaida(){
        //SAIDA-----------------------------------------------------------------
            //BOTÕES DE AÇÃO----------------------------------------------------
                novoSaida.setEnabled(true);
                redefinirSaida.setEnabled(false);
                salvarSaida.setEnabled(false);
                iniciarVideoSaida.setEnabled(false);
                capturarVideoSaida.setEnabled(false);
                definirHorarioEntradaSaida.setEnabled(false);
            //CAMPOS DE TEXTO---------------------------------------------------
                pesquisaSaida.setEnabled(true);
                postoGraduacaoSaida.setEnabled(false);
                nomeGuerraSaida.setEnabled(false);
                sessaoSaida.setEnabled(false);
                motivoSaida.setEnabled(false);
                
                postoGraduacaoSaida.setSelectedIndex(0);
                nomeGuerraSaida.setText("");
                sessaoSaida.setSelectedIndex(0);
                motivoSaida.setText("");
            //FOTO--------------------------------------------------------------
                fotoSaida.setIcon(null);
            //LISTA PESQUISA----------------------------------------------------
                listaPesquisaSaida.setVisible(false);
            //TABELA------------------------------------------------------------
                tabelaSaida.setEnabled(true);
            //VARIÁVEIS AUXILIARES----------------------------------------------
                redefinirSaidaAux = 0;
                imageArraySaida = null;
    }
    
    public void novoSaida(){
        //SAIDA-----------------------------------------------------------------
            //BOTÕES DE AÇÃO----------------------------------------------------
                novoSaida.setEnabled(false);
                redefinirSaida.setEnabled(false);
                salvarSaida.setEnabled(true);
                iniciarVideoSaida.setEnabled(true);
                capturarVideoSaida.setEnabled(false);
            //CAMPOS DE TEXTO---------------------------------------------------
                pesquisaSaida.setEnabled(true);
                postoGraduacaoSaida.setEnabled(true);
                nomeGuerraSaida.setEnabled(true);
                sessaoSaida.setEnabled(true);
                motivoSaida.setEnabled(true);
                
                postoGraduacaoSaida.setSelectedIndex(0);
                nomeGuerraSaida.setText("");
                sessaoSaida.setSelectedIndex(0);
                motivoSaida.setText("");
            //FOTO--------------------------------------------------------------
                fotoSaida.setIcon(null);
            //LISTA PESQUISA----------------------------------------------------
                listaPesquisaSaida.setVisible(false);
            //TABELA------------------------------------------------------------
                tabelaSaida.setEnabled(true);
            //VARIÁVEIS AUXILIARES----------------------------------------------
                redefinirSaidaAux = 0;
                imageArraySaida = null;
    }
    
    public void redefinirSaida(){
        //SAIDA-----------------------------------------------------------------
            //BOTÕES DE AÇÃO----------------------------------------------------
                novoSaida.setEnabled(true);
                redefinirSaida.setEnabled(false);
                salvarSaida.setEnabled(true);
                iniciarVideoSaida.setEnabled(true);
                capturarVideoSaida.setEnabled(false);
            //CAMPOS DE TEXTO---------------------------------------------------
                pesquisaSaida.setEnabled(true);
                postoGraduacaoSaida.setEnabled(true);
                nomeGuerraSaida.setEnabled(false);
                sessaoSaida.setEnabled(true);
                motivoSaida.setEnabled(true);
                
                motivoSaida.setText("");
            //FOTO--------------------------------------------------------------
            
            //LISTA PESQUISA----------------------------------------------------
                listaPesquisaSaida.setVisible(false);
            //TABELA------------------------------------------------------------
                tabelaSaida.setEnabled(true);
            //VARIÁVEIS AUXILIARES----------------------------------------------
                redefinirSaidaAux = 1;
    }
    
    public void estadoInicialEntrada(){
        //ENTRADA---------------------------------------------------------------
            //BOTÕES DE AÇÃO----------------------------------------------------
                novoEntrada.setEnabled(true);
                redefinirEntrada.setEnabled(false);
                salvarEntrada.setEnabled(false);
                iniciarVideoEntrada.setEnabled(false);
                capturarVideoEntrada.setEnabled(false);
                definirHorarioEntradaEntrada.setEnabled(false);
            //CAMPOS DE TEXTO---------------------------------------------------
                pesquisaEntrada.setEnabled(true);
                postoGraduacaoEntrada.setEnabled(false);
                nomeGuerraEntrada.setEnabled(false);
                sessaoEntrada.setEnabled(false);
                motivoEntrada.setEnabled(false);
                
                postoGraduacaoEntrada.setSelectedIndex(0);
                nomeGuerraEntrada.setText("");
                sessaoEntrada.setSelectedIndex(0);
                motivoEntrada.setText("");
            //FOTO--------------------------------------------------------------
                fotoEntrada.setIcon(null);
            //LISTA PESQUISA----------------------------------------------------
                listaPesquisaEntrada.setVisible(false);
            //TABELA------------------------------------------------------------
                tabelaEntrada.setEnabled(true);
            //VARIÁVEIS AUXILIARES----------------------------------------------
                redefinirEntradaAux = 0;
                imageArrayEntrada = null;
    }
    
    public void novoEntrada(){
        //ENTRADA---------------------------------------------------------------
            //BOTÕES DE AÇÃO----------------------------------------------------
                novoEntrada.setEnabled(false);
                redefinirEntrada.setEnabled(false);
                salvarEntrada.setEnabled(true);
                iniciarVideoEntrada.setEnabled(true);
                capturarVideoEntrada.setEnabled(false);
            //CAMPOS DE TEXTO---------------------------------------------------
                pesquisaEntrada.setEnabled(true);
                postoGraduacaoEntrada.setEnabled(true);
                nomeGuerraEntrada.setEnabled(true);
                sessaoEntrada.setEnabled(true);
                motivoEntrada.setEnabled(true);
                
                postoGraduacaoEntrada.setSelectedIndex(0);
                nomeGuerraEntrada.setText("");
                sessaoEntrada.setSelectedIndex(0);
                motivoEntrada.setText("");
            //FOTO--------------------------------------------------------------
                fotoEntrada.setIcon(null);
            //LISTA PESQUISA----------------------------------------------------
                listaPesquisaEntrada.setVisible(false);
            //TABELA------------------------------------------------------------
                tabelaEntrada.setEnabled(true);
            //VARIÁVEIS AUXILIARES----------------------------------------------
                redefinirEntradaAux = 0;
                imageArrayEntrada = null;
    }
    
    public void redefinirEntrada(){
        //ENTRADA---------------------------------------------------------------
            //BOTÕES DE AÇÃO----------------------------------------------------
                novoEntrada.setEnabled(true);
                redefinirEntrada.setEnabled(false);
                salvarEntrada.setEnabled(true);
                iniciarVideoEntrada.setEnabled(true);
                capturarVideoEntrada.setEnabled(false);
            //CAMPOS DE TEXTO---------------------------------------------------
                pesquisaEntrada.setEnabled(true);
                postoGraduacaoEntrada.setEnabled(true);
                nomeGuerraEntrada.setEnabled(true);
                sessaoEntrada.setEnabled(true);
                motivoEntrada.setEnabled(true);
                
                motivoEntrada.setText("");
            //FOTO--------------------------------------------------------------
            
            //LISTA PESQUISA----------------------------------------------------
                listaPesquisaEntrada.setVisible(false);
            //TABELA------------------------------------------------------------
                tabelaEntrada.setEnabled(true);
            //VARIÁVEIS AUXILIARES----------------------------------------------
                redefinirEntradaAux = 1;
    }
    //--------------------------------------------------------------------------
    
    
    
    public void readJTable(){
        SimpleDateFormat sdh = new SimpleDateFormat("dd/MM/yyyy");
        DefaultTableModel modelo = (DefaultTableModel) tabelaVisitantes.getModel();
        modelo.setNumRows(0);
        cadastroDAO cdao = new cadastroDAO();
        
        for(CadastroBEAN c: cdao.read(sdh.format(new Date()))){
            modelo.addRow(new Object[]{
                c.getId(),
                c.getN_cracha(),
                c.getNomeCompleto(),
                c.getTipoDocumento(),
                c.getDocumentoIden(),
                c.getDestino(),
                c.getComquemFalar(),
                c.getTelefone(),
                c.getTipoVisitante(),
                c.getData(),
                c.getHoraE(),
                c.getHoraS()});
        }
        corTabela();
    }
    
    public void readJTable_controle(){
        SimpleDateFormat sdh = new SimpleDateFormat("dd/MM/yyyy");
        DefaultTableModel modelo2 = (DefaultTableModel) tabelaSaida.getModel();
        modelo2.setNumRows(0);
        controleDAO cdao = new controleDAO();
        
        for(ControleExpedienteBEAN c: cdao.read_controle(sdh.format(new Date()))){
            modelo2.addRow(new Object[]{
                c.getId(),
                c.getGrad_posto(),
                c.getNome_guerra(),
                c.getSessao(),
                c.getData(),
                c.getHora_saida(),
                c.getHora_entrada(),
                c.getMotivo_saida()});
        }
        corTabela_controle();
    }
    
    public void readJTable_controlef(){
        SimpleDateFormat sdh = new SimpleDateFormat("dd/MM/yyyy");
        DefaultTableModel modelo2 = (DefaultTableModel) tabelaEntrada.getModel();
        modelo2.setNumRows(0);
        controlefDAO cfdao = new controlefDAO();
        
        for(ControleForaExpedienteBEAN cf: cfdao.read_controlef(sdh.format(new Date()))){
            modelo2.addRow(new Object[]{
                cf.getId(),
                cf.getGrad_posto(),
                cf.getNome_guerra(),
                cf.getSessao(),
                cf.getData(),
                cf.getHora_entrada(),
                cf.getHora_saida(),
                cf.getMotivo_entrada()});
        }
        corTabela_controlef();
    }
    
    public void INICIALIZA(){
        try{
            dimensao_default = WebcamResolution.VGA.getSize();
            WEBCAM = Webcam.getDefault();
            WEBCAM.setViewSize(dimensao_default);
        }catch(WebcamException e){
            JOptionPane.showMessageDialog(null,"Erro na inicialização do dispositivo de vídeo!\nVerifique se o dispositivo está corretamente instalado.");
        }
    }
    
    private void INICIALIZA_VIDEO(JLabel label){
        new Thread(){
            @Override
            public void run(){
                while(true&&executando){
                    try{
                        Image imagem = WEBCAM.getImage();
                        ImageIcon icon = new ImageIcon(imagem);
                        icon.setImage(icon.getImage().getScaledInstance(label.getWidth(),label.getHeight(),100));
                        label.setIcon(icon);
                        Thread.sleep(50);
                    }catch(InterruptedException e){
                        System.out.println(e);
                    }
                }
            }
        }.start();
    }
    
    public static byte[] getImgBytes(BufferedImage image) throws IOException{
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        try{
            ImageIO.write(image, "JPEG", baos);
        }catch(IOException ex){
            System.err.println("Erro ao gerar bytes");
        }
        
        InputStream is = new ByteArrayInputStream(baos.toByteArray());
        
        return baos.toByteArray();
    }
    
    public static void exibirImagemLabel(byte[] img, javax.swing.JLabel label){
        if(img != null){
            InputStream input = new ByteArrayInputStream(img);
            try{
                BufferedImage imagem = ImageIO.read(input);
                label.setIcon(new ImageIcon(imagem));
            }catch(IOException ex){
                System.err.println("Erro ao converter imagem");
            }
        }
    }
    
    public void corTabela(){
        tabelaVisitantes.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                                                           boolean isSelected, boolean hasFocus,
                                                           int row, int column){
                JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            //***********************
            Color c = Color.WHITE;
            Object texto = table.getValueAt(row,11);
            if(texto == null)
                c = Color.RED;
            label.setBackground(c);
            tabelaVisitantes.setSelectionForeground(Color.BLUE);
            //***********************
            
            return label;
            }
        });
    }
    
    public void corTabela_controle(){
        String CLASS = "";
        tabelaSaida.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                                                           boolean isSelected, boolean hasFocus,
                                                           int row, int column){
                JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            //***********************
            Color c = Color.WHITE;
            Object texto = table.getValueAt(row,6);
            if(texto != null && CLASS.equals(texto.toString()))
                c = Color.RED;
            label.setBackground(c);
            tabelaSaida.setSelectionForeground(Color.BLUE);
            //***********************
            
            return label;
            }
        });
    }
    
    public void corTabela_controlef(){
        String CLASS = "";
        tabelaEntrada.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                                                           boolean isSelected, boolean hasFocus,
                                                           int row, int column){
                JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            //***********************
            Color c = Color.WHITE;
            Object texto = table.getValueAt(row,6);
            if(texto != null && CLASS.equals(texto.toString()))
                c = Color.RED;
            label.setBackground(c);
            tabelaEntrada.setSelectionForeground(Color.BLUE);
            //***********************
            
            return label;
            }
        });
    }
    
    public void ListaPesquisaVisitantesAux() throws SQLException{
        try{
            cadastroDAO dao = new cadastroDAO();
            dao.executaSQL("SELECT NomeCompleto FROM cadastro WHERE NomeCompleto LIKE '%" + pesquisaRegistroVisitantes.getText() + "%' ORDER BY NomeCompleto");
            model_list.removeAllElements();
            int v = 0;
            while(dao.rs2.next() & v < 4){
                if(model_list.contains(dao.rs2.getString("NomeCompleto"))){
                    
                }else{
                    model_list.addElement(dao.rs2.getString("NomeCompleto"));
                    v++;
                }
            }
            if(v >= 1){
                listaPesquisaVisitantes.setVisible(true);
            }else{
                listaPesquisaVisitantes.setVisible(false);
            }
            //ResultadoPesquisa();
        }catch(SQLException ex){
            System.err.println("Erro ao listar dados" + ex);
        }
    }
    
    public void ListaPesquisaSaidaAux() throws SQLException{
        try{
            controleDAO cdao = new controleDAO();
            cdao.executaSQL("SELECT nome_guerra, grad_posto FROM controle_saida WHERE nome_guerra LIKE '%" + pesquisaSaida.getText() + "%' ORDER BY nome_guerra");
            model_list2.removeAllElements();
            int v2 = 0;
            while(cdao.rs3.next() & v2 < 4){
                String resultado;
                resultado = cdao.rs3.getString("grad_posto") + " " + cdao.rs3.getString("nome_guerra");
                if(model_list2.contains(resultado)){
                
                }else{
                    model_list2.addElement(resultado);
                    v2++;
                }
            }
            if(v2 >= 1){
                listaPesquisaSaida.setVisible(true);
            }else{
                listaPesquisaSaida.setVisible(false);
            }
            //ResultadoPesquisa();
        }catch(SQLException ex){
            System.err.println("Erro ao listar dados" + ex);
        }
    }
    
    public void ListaPesquisaEntradaAux(){
        try{
            controlefDAO cfdao = new controlefDAO();
            cfdao.executaSQL("SELECT nome_guerra, grad_posto FROM controlef_saida WHERE nome_guerra LIKE '%" + pesquisaEntrada.getText() + "%' ORDER BY nome_guerra");
            model_list3.removeAllElements();
            int v3 = 0;
            while(cfdao.rs3.next() & v3 < 4){
                String resultado;
                resultado = cfdao.rs3.getString("grad_posto") + " " + cfdao.rs3.getString("nome_guerra");
                if(model_list3.contains(resultado)){
                    
                }else{
                    model_list3.addElement(resultado);
                    v3++;
                }
            }
            if(v3 >= 1){
                listaPesquisaEntrada.setVisible(true);
            }else{
                listaPesquisaEntrada.setVisible(false);
            }
            //ResultadoPesquisa();
        }catch(SQLException ex){
            System.err.println("Erro ao listar dados" + ex);
        }
    }
    
    public void ResultadoPesquisa() throws SQLException, IOException{
        String tipo_doc;
        String tipo_v;
        cadastroDAO dao = new cadastroDAO();
        for(CadastroBEAN c: dao.preenche_pesquisa(listaPesquisaVisitantes.getSelectedValue().toString())){
            nomeCompletoVisitante.setText(c.getNomeCompleto());
            telefoneVisitante.setText(c.getTelefone());
            numeroDocumentoVisitante.setText(c.getDocumentoIden());
            tipo_doc = c.getTipoDocumento();
            tipo_v = c.getTipoVisitante();
            tipoDocumentoVisitante.setSelectedItem(tipo_doc);
            if(tipo_v.equals("Civil")){
                civil.setSelected(true);
            }if(tipo_v.equals("Militar")){
                militar.setSelected(true);
            }if(tipo_v.equals("Fornecedor")){
                fornecedor.setSelected(true);
            }
            exibirImagemLabel(c.getFoto(), fotoVisitante);
            InputStream input = new ByteArrayInputStream(c.getFoto());
            BufferedImage imagem = ImageIO.read(input);
            imageArrayVisitantes = imagem;
        }
        redefinirVisitante.setEnabled(true);
    }
    
    public void ResultadoPesquisa_controle(String grad_posto, String nome_guerra) throws SQLException, IOException{
        String posto_grad;
        String sessao;
        controleDAO cdao = new controleDAO();
        for(ControleExpedienteBEAN c: cdao.preenche_pesquisa_controle(grad_posto, nome_guerra)){
            nomeGuerraSaida.setText(c.getNome_guerra());
            posto_grad = c.getGrad_posto();
            sessao = c.getSessao();
            postoGraduacaoSaida.setSelectedItem(posto_grad);
            sessaoSaida.setSelectedItem(sessao);
            exibirImagemLabel(c.getImagem(),fotoSaida);
            InputStream input = new ByteArrayInputStream(c.getImagem());
            BufferedImage imagem = ImageIO.read(input);
            imageArraySaida = imagem;
        }
        listaPesquisaSaida.setVisible(false);
    }
    
    public void ResultadoPesquisa_controlef(String grad_posto, String nome_guerra) throws IOException{
        String posto_grad;
        String sessao;
        controlefDAO cfdao = new controlefDAO();
        for(ControleForaExpedienteBEAN cf: cfdao.preenche_pesquisa_controlef(grad_posto, nome_guerra)){
            nomeGuerraEntrada.setText(cf.getNome_guerra());
            posto_grad = cf.getGrad_posto();
            sessao = cf.getSessao();
            postoGraduacaoEntrada.setSelectedItem(posto_grad);
            sessaoEntrada.setSelectedItem(sessao);
            exibirImagemLabel(cf.getImagem(),fotoEntrada);
            InputStream input = new ByteArrayInputStream(cf.getImagem());
            BufferedImage imagem = ImageIO.read(input);
            imageArrayEntrada = imagem;
        }
        listaPesquisaEntrada.setVisible(false);
    }
    
    public void verifica_check() throws SQLException{
        cadastroDAO dao = new cadastroDAO();
        
        if(dao.busca_cracha(1)){
            c1.setEnabled(false);
        }else{
            c1.setEnabled(true);
        }
        
        if(dao.busca_cracha(2)){
            c2.setEnabled(false);
        }else{
            c2.setEnabled(true);
        }
        
        if(dao.busca_cracha(3)){
            c3.setEnabled(false);
        }else{
            c3.setEnabled(true);
        }
        
        if(dao.busca_cracha(4)){
            c4.setEnabled(false);
        }else{
            c4.setEnabled(true);
        }
        
        if(dao.busca_cracha(5)){
            c5.setEnabled(false);
        }else{
            c5.setEnabled(true);
        }
        
        if(dao.busca_cracha(6)){
            c6.setEnabled(false);
        }else{
            c6.setEnabled(true);
        }
        
        if(dao.busca_cracha(7)){
            c7.setEnabled(false);
        }else{
            c7.setEnabled(true);
        }
        
        if(dao.busca_cracha(8)){
            c8.setEnabled(false);
        }else{
            c8.setEnabled(true);   
        }
        
        if(dao.busca_cracha(9)){
            c9.setEnabled(false);
        }else{
            c9.setEnabled(true);
        }
        
        if(dao.busca_cracha(10)){
            c10.setEnabled(false);
        }else{
            c10.setEnabled(true);
        }
        
        if(dao.busca_cracha(11)){
            c11.setEnabled(false);
        }else{
            c11.setEnabled(true);
        }
        
        if(dao.busca_cracha(12)){
            c12.setEnabled(false);
        }else{
            c12.setEnabled(true);
        }
        
        if(dao.busca_cracha(13)){
            c13.setEnabled(false);
        }else{
            c13.setEnabled(true);
        }
        
        if(dao.busca_cracha(14)){
            c14.setEnabled(false);
        }else{
            c14.setEnabled(true);
        }
        
        if(dao.busca_cracha(15)){
            c15.setEnabled(false);
        }else{
            c15.setEnabled(true);
        }
        
        if(dao.busca_cracha(16)){
            c16.setEnabled(false);
        }else{
            c16.setEnabled(true);
        }
        
        if(dao.busca_cracha(17)){
            c17.setEnabled(false);
        }else{
            c17.setEnabled(true);
        }
        
        if(dao.busca_cracha(18)){
            c18.setEnabled(false);
        }else{
            c18.setEnabled(true);
        }
        
        if(dao.busca_cracha(19)){
            c19.setEnabled(false);
        }else{
            c19.setEnabled(true);
        }
        
        if(dao.busca_cracha(20)){
            c20.setEnabled(false);
        }else{
            c20.setEnabled(true);
        }
    }
    
    private void desativa_botoes_encerra_sv(){
        //Registro de visitantes
        pesquisaRegistroVisitantes.setEnabled(false);
        iniciarVideoRegistroVisitantes.setEnabled(false);
        capturarVideoRegistroVisitantes.setEnabled(false);
        novoVisitante.setEnabled(false);
        nomeCompletoVisitante.setEnabled(false);
        tipoDocumentoVisitante.setEnabled(false);
        numeroDocumentoVisitante.setEnabled(false);
        telefoneVisitante.setEnabled(false);
        buttonGroup1.clearSelection();
        civil.setEnabled(false);
        militar.setEnabled(false);
        fornecedor.setEnabled(false);
        c1.setEnabled(false);
        c2.setEnabled(false);
        c3.setEnabled(false);
        c4.setEnabled(false);
        c5.setEnabled(false);
        c6.setEnabled(false);
        c7.setEnabled(false);
        c8.setEnabled(false);
        c9.setEnabled(false);
        c10.setEnabled(false);
        c11.setEnabled(false);
        c12.setEnabled(false);
        c13.setEnabled(false);
        c14.setEnabled(false);
        c15.setEnabled(false);
        c16.setEnabled(false);
        c17.setEnabled(false);
        c18.setEnabled(false);
        c19.setEnabled(false);
        c20.setEnabled(false);
        destinoVisitante.setEnabled(false);
        comQuemFalarVisitante.setEnabled(false);
        associarVeiculo.setEnabled(false);
        redefinirVisitante.setEnabled(false);
        salvarVisitante.setEnabled(false);
        definirHorarioSaidaVisitantes.setEnabled(false);
        tabelaVisitantes.setEnabled(false);
        
        //Controle saída CB/SD
        pesquisaSaida.setEnabled(false);
        listaPesquisaSaida.setEnabled(false);
        postoGraduacaoSaida.setEnabled(false);
        nomeGuerraSaida.setEnabled(false);
        sessaoSaida.setEnabled(false);
        motivoSaida.setEnabled(false);
        iniciarVideoSaida.setEnabled(false);
        capturarVideoSaida.setEnabled(false);
        novoSaida.setEnabled(false);
        redefinirSaida.setEnabled(false);
        salvarSaida.setEnabled(false);
        tabelaSaida.setEnabled(false);
        definirHorarioEntradaSaida.setEnabled(false);
        
        //Controle entrada fora do expediente
        pesquisaEntrada.setEnabled(false);
        listaPesquisaEntrada.setEnabled(false);
        postoGraduacaoEntrada.setEnabled(false);
        nomeGuerraEntrada.setEnabled(false);
        sessaoEntrada.setEnabled(false);
        motivoEntrada.setEnabled(false);
        iniciarVideoEntrada.setEnabled(false);
        capturarVideoEntrada.setEnabled(false);
        novoEntrada.setEnabled(false);
        redefinirEntrada.setEnabled(false);
        salvarEntrada.setEnabled(false);
        definirHorarioEntradaEntrada.setEnabled(false);
    }
    
    public void inicia_botoes_inicia_sv(){
        //Registro de visitantes
        pesquisaRegistroVisitantes.setEnabled(true);
        iniciarVideoRegistroVisitantes.setEnabled(true);
        capturarVideoRegistroVisitantes.setEnabled(false);
        novoVisitante.setEnabled(true);
        nomeCompletoVisitante.setEnabled(false);
        tipoDocumentoVisitante.setEnabled(false);
        numeroDocumentoVisitante.setEnabled(false);
        telefoneVisitante.setEnabled(false);
        buttonGroup1.clearSelection();
        civil.setEnabled(false);
        militar.setEnabled(false);
        fornecedor.setEnabled(false);
        c1.setEnabled(false);
        c2.setEnabled(false);
        c3.setEnabled(false);
        c4.setEnabled(false);
        c5.setEnabled(false);
        c6.setEnabled(false);
        c7.setEnabled(false);
        c8.setEnabled(false);
        c9.setEnabled(false);
        c10.setEnabled(false);
        c11.setEnabled(false);
        c12.setEnabled(false);
        c13.setEnabled(false);
        c14.setEnabled(false);
        c15.setEnabled(false);
        c16.setEnabled(false);
        c17.setEnabled(false);
        c18.setEnabled(false);
        c19.setEnabled(false);
        c20.setEnabled(false);
        destinoVisitante.setEnabled(false);
        comQuemFalarVisitante.setEnabled(false);
        associarVeiculo.setEnabled(false);
        redefinirVisitante.setEnabled(false);
        salvarVisitante.setEnabled(false);
        definirHorarioSaidaVisitantes.setEnabled(false);
        tabelaVisitantes.setEnabled(true);
        
        //Controle de Saída de CB/SD
        pesquisaSaida.setEnabled(true);
        listaPesquisaSaida.setEnabled(true);
        postoGraduacaoSaida.setEnabled(false);
        nomeGuerraSaida.setEnabled(false);
        sessaoSaida.setEnabled(false);
        motivoSaida.setEnabled(false);
        iniciarVideoSaida.setEnabled(true);
        capturarVideoSaida.setEnabled(false);
        novoSaida.setEnabled(true);
        redefinirSaida.setEnabled(false);
        salvarSaida.setEnabled(false);
        tabelaSaida.setEnabled(true);
        definirHorarioEntradaSaida.setEnabled(false);
        
        //Controle de entrada fora do expediente
        pesquisaEntrada.setEnabled(true);
        listaPesquisaEntrada.setEnabled(true);
        postoGraduacaoEntrada.setEnabled(false);
        nomeGuerraEntrada.setEnabled(false);
        sessaoEntrada.setEnabled(false);
        motivoEntrada.setEnabled(false);
        iniciarVideoEntrada.setEnabled(true);
        capturarVideoEntrada.setEnabled(false);
        novoEntrada.setEnabled(true);
        redefinirEntrada.setEnabled(false);
        salvarEntrada.setEnabled(false);
        definirHorarioEntradaEntrada.setEnabled(false);
    }
}
